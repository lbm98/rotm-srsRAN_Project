#include <fstream>
#include <iostream>

#include "packet_list.h"

int main()
{
  std::vector<uint8_t> packet_data1   = {0x1d, 0xec, 0x89, 0xd0, 0x57, 0x66};
  uint16_t             packet_type1   = 1;
  uint16_t             packet_length1 = packet_data1.size();
  PacketHeader         packet_hdr1{packet_length1, packet_type1};
  PacketRecord         record1{packet_hdr1, packet_data1};

  std::vector<uint8_t> packet_data2 = {
      0x00, 0x00, 0x10, 0xc0, 0x10, 0x00, 0x08, 0x27, 0x27, 0xe0, 0x1c, 0x3f, 0xf1, 0x00, 0xc0, 0x47, 0xe0, 0x04, 0x13,
      0x90, 0x00, 0xbf, 0x20, 0x2f, 0x89, 0x98, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0xf2, 0xe0, 0x4f, 0x07, 0x0f, 0x07,
      0x07, 0x10, 0x05, 0x17, 0xe0, 0x04, 0x13, 0x90, 0x00, 0xbf, 0x20, 0x2f, 0x89, 0x98, 0x00, 0x04, 0x10, 0x00, 0x00,
      0x00, 0xf1, 0x00, 0x10, 0x32, 0xe0, 0x4f, 0x07, 0x0f, 0x07, 0x02, 0xf1, 0xb0, 0x80, 0x10, 0x02, 0x7d, 0xb0, 0x00,
      0x00, 0x00, 0x00, 0x80, 0x10, 0x1b, 0x66, 0x90, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00,
      0x00, 0x05, 0x20, 0x2f, 0x89, 0x90, 0x00, 0x00, 0x11, 0x70, 0x7f, 0x07, 0x0c, 0x04, 0x01, 0x98, 0x0b, 0x01, 0x80,
      0x10, 0x17, 0x40, 0x00, 0x09, 0x05, 0x30, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00};
  uint16_t     packet_type2   = 2;
  uint16_t     packet_length2 = packet_data2.size();
  PacketHeader packet_hdr2{packet_length2, packet_type2};
  PacketRecord record2{packet_hdr2, packet_data2};

  PacketList packet_list{{record1, record2}};

  std::vector<uint8_t> buf{};
  packet_list.serialize(buf);

  std::ofstream file("inputs/input.bin", std::ios::binary);

  if (file.is_open()) {
    file.write(reinterpret_cast<const char*>(buf.data()), buf.size());
    file.close();
  } else {
    std::cerr << "Unable to open the file!\n";
  }

  return 0;
}